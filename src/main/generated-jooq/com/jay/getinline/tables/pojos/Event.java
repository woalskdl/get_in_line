/*
 * This file is generated by jOOQ.
 */
package com.jay.getinline.tables.pojos;


import com.jay.getinline.constant.EventStatus;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Event implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long          id;
    private final Integer       capacity;
    private final LocalDateTime createdAt;
    private final Integer       currentNumberOfPeople;
    private final LocalDateTime eventEndDatetime;
    private final String        eventName;
    private final LocalDateTime eventStartDatetime;
    private final EventStatus   eventStatus;
    private final String        memo;
    private final LocalDateTime modifiedAt;
    private final Long          placeId;

    public Event(Event value) {
        this.id = value.id;
        this.capacity = value.capacity;
        this.createdAt = value.createdAt;
        this.currentNumberOfPeople = value.currentNumberOfPeople;
        this.eventEndDatetime = value.eventEndDatetime;
        this.eventName = value.eventName;
        this.eventStartDatetime = value.eventStartDatetime;
        this.eventStatus = value.eventStatus;
        this.memo = value.memo;
        this.modifiedAt = value.modifiedAt;
        this.placeId = value.placeId;
    }

    public Event(
        Long          id,
        Integer       capacity,
        LocalDateTime createdAt,
        Integer       currentNumberOfPeople,
        LocalDateTime eventEndDatetime,
        String        eventName,
        LocalDateTime eventStartDatetime,
        EventStatus   eventStatus,
        String        memo,
        LocalDateTime modifiedAt,
        Long          placeId
    ) {
        this.id = id;
        this.capacity = capacity;
        this.createdAt = createdAt;
        this.currentNumberOfPeople = currentNumberOfPeople;
        this.eventEndDatetime = eventEndDatetime;
        this.eventName = eventName;
        this.eventStartDatetime = eventStartDatetime;
        this.eventStatus = eventStatus;
        this.memo = memo;
        this.modifiedAt = modifiedAt;
        this.placeId = placeId;
    }

    /**
     * Getter for <code>getinline.event.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>getinline.event.capacity</code>.
     */
    public Integer getCapacity() {
        return this.capacity;
    }

    /**
     * Getter for <code>getinline.event.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>getinline.event.current_number_of_people</code>.
     */
    public Integer getCurrentNumberOfPeople() {
        return this.currentNumberOfPeople;
    }

    /**
     * Getter for <code>getinline.event.event_end_datetime</code>.
     */
    public LocalDateTime getEventEndDatetime() {
        return this.eventEndDatetime;
    }

    /**
     * Getter for <code>getinline.event.event_name</code>.
     */
    public String getEventName() {
        return this.eventName;
    }

    /**
     * Getter for <code>getinline.event.event_start_datetime</code>.
     */
    public LocalDateTime getEventStartDatetime() {
        return this.eventStartDatetime;
    }

    /**
     * Getter for <code>getinline.event.event_status</code>.
     */
    public EventStatus getEventStatus() {
        return this.eventStatus;
    }

    /**
     * Getter for <code>getinline.event.memo</code>.
     */
    public String getMemo() {
        return this.memo;
    }

    /**
     * Getter for <code>getinline.event.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Getter for <code>getinline.event.place_id</code>.
     */
    public Long getPlaceId() {
        return this.placeId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Event (");

        sb.append(id);
        sb.append(", ").append(capacity);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(currentNumberOfPeople);
        sb.append(", ").append(eventEndDatetime);
        sb.append(", ").append(eventName);
        sb.append(", ").append(eventStartDatetime);
        sb.append(", ").append(eventStatus);
        sb.append(", ").append(memo);
        sb.append(", ").append(modifiedAt);
        sb.append(", ").append(placeId);

        sb.append(")");
        return sb.toString();
    }
}
